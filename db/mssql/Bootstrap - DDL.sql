USE DMS
GO

--CREATE SCHEMA [Node]
--GO

IF OBJECT_ID('[Node].Field') IS NOT NULL DROP TABLE [Node].Field;
IF OBJECT_ID('[Node].[Schema]') IS NOT NULL DROP TABLE [Node].[Schema];
IF OBJECT_ID('[Node].[Namespace]') IS NOT NULL DROP TABLE [Node].[Namespace];
IF OBJECT_ID('[Node].Tag') IS NOT NULL DROP TABLE [Node].Tag;
IF OBJECT_ID('[Node].Tag') IS NOT NULL DROP TABLE [Node].Tag;

IF OBJECT_ID('[Node].EnumTagSQLType') IS NOT NULL DROP TABLE [Node].EnumTagSQLType;
IF OBJECT_ID('[Node].EnumTagType') IS NOT NULL DROP TABLE [Node].EnumTagType;
GO


CREATE TABLE [Node].EnumTagType (
	EnumTagTypeID INT IDENTITY(1,1) PRIMARY KEY,
	[Key] VARCHAR(255) NOT NULL,
	[Value] VARCHAR(255) NOT NULL,
	IsHyperTag BIT NOT NULL DEFAULT 0,

	CreatedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	ModifiedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	DeactivatedDT DATETIME2 NULL
);

CREATE TABLE [Node].EnumTagSQLType (
	EnumTagSQLTypeID INT IDENTITY(1,1) PRIMARY KEY,
	EnumTagTypeID INT UNIQUE NOT NULL FOREIGN KEY REFERENCES [Node].EnumTagType (EnumTagTypeID),	-- Enforce uniqueness to ensure bijection
	[Value] VARCHAR(255) NOT NULL,
	
	Data1 VARCHAR(255) NULL,	-- Store optional "meta" data (e.g. DECIMAL's precision, scale, etc.)
	Data2 VARCHAR(255) NULL,	-- Store optional "meta" data (e.g. DECIMAL's precision, scale, etc.)
	Data3 VARCHAR(255) NULL,	-- Store optional "meta" data (e.g. DECIMAL's precision, scale, etc.)

	CreatedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	ModifiedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	DeactivatedDT DATETIME2 NULL
);



CREATE TABLE [Node].Tag (
	UUID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID() PRIMARY KEY,
	ParentUUID UNIQUEIDENTIFIER NULL FOREIGN KEY REFERENCES [Node].Tag (UUID),
	EnumTagTypeID INT NOT NULL FOREIGN KEY REFERENCES [Node].EnumTagType (EnumTagTypeID),
	[Value] NVARCHAR(MAX) NULL,
	Opts NVARCHAR(MAX) NULL,

	CreatedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	ModifiedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	DeactivatedDT DATETIME2 NULL
);

CREATE TABLE [Node].[Namespace] (
	NamespaceID INT IDENTITY(1,1) PRIMARY KEY,
	ParentNamespaceID INT NULL FOREIGN KEY REFERENCES [Node].[Namespace] (NamespaceID),
	[Namespace] NVARCHAR(MAX) NULL,
	IsDomain BIT NOT NULL DEFAULT 0,
	
	TagUUID UNIQUEIDENTIFIER NOT NULL FOREIGN KEY REFERENCES [Node].Tag (UUID),
	CreatedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	ModifiedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	DeactivatedDT DATETIME2 NULL
);

CREATE TABLE [Node].[Schema] (
	SchemaID INT IDENTITY(1,1) PRIMARY KEY,
	NamespaceID INT NOT NULL FOREIGN KEY REFERENCES [Node].[Namespace] (NamespaceID),
	Alias NVARCHAR(MAX),
	
	TagUUID UNIQUEIDENTIFIER NOT NULL FOREIGN KEY REFERENCES [Node].Tag (UUID),
	CreatedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	ModifiedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	DeactivatedDT DATETIME2 NULL
);

CREATE TABLE [Node].Field (
	FieldID INT IDENTITY(1,1) PRIMARY KEY,
	SchemaID INT NOT NULL FOREIGN KEY REFERENCES [Node].[Schema] (SchemaID),
	EnumTagSQLTypeID INT NOT NULL FOREIGN KEY REFERENCES [Node].EnumTagSQLType (EnumTagSQLTypeID),
	
	TagUUID UNIQUEIDENTIFIER NOT NULL FOREIGN KEY REFERENCES [Node].Tag (UUID),
	CreatedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	ModifiedDT DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP,
	DeactivatedDT DATETIME2 NULL
);